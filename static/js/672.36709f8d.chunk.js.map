{"version":3,"file":"static/js/672.36709f8d.chunk.js","mappings":"8KACA,GAAgB,QAAU,yBAAyB,KAAO,sBAAsB,MAAQ,uBAAuB,WAAa,4BAA4B,OAAS,yB,6BCWjK,EARmB,SAACA,GAClB,OACE,eAAIC,UAAWC,EAAAA,WAAf,UACE,SAAC,KAAD,CAASD,UAAW,SAAAE,GAAO,OAAIA,EAAQC,SAAWF,EAAAA,OAAgB,IAAIG,GAAE,mBAAcL,EAAMM,IAA5F,SAAmGN,EAAMO,QADpEP,EAAMM,KCGjD,EANgB,SAACN,GACf,OACE,gBAAKC,UAAWC,EAAAA,QAAhB,SAAiCF,EAAMQ,W,6BCGrCC,EAAgBC,EAAAA,KAAaC,MAAM,CACvCC,eAAgBF,EAAAA,KACbG,SAAS,6EACTC,IAAI,GAAI,+BA6Bb,EA1BgB,SAACd,GACf,IAAIe,EACFf,EAAMgB,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYZ,KAAMY,EAAEZ,KAAMD,GAAIa,EAAEb,IAASa,EAAEb,OAE5Ec,EACFpB,EAAMgB,YAAYK,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAAchB,GAAIgB,EAAEhB,GAAIE,QAASc,EAAEd,SAAcc,EAAEhB,OAMzF,OAAKN,EAAMuB,QAGT,iBAAKtB,UAAWC,EAAAA,QAAhB,WACE,eAAID,UAAWC,EAAAA,KAAf,SACGa,KAEH,4BACE,yBAAMK,KACN,SAACI,EAAD,CAAgBC,YAbK,SAACC,GAC1B1B,EAAM2B,mBAAmBD,aAGA,SAAC,KAAD,CAAUE,SAAO,EAACvB,GAAI,YAiB7CmB,EAAiB,SAACxB,GAMtB,OACE,SAAC,KAAD,CACE6B,cAAe,CACbjB,eAAgB,IAElBkB,SAAU,SAACJ,EAAD,GAA0B,IAAhBK,EAAe,EAAfA,WATJ,SAACL,GACnB1B,EAAMyB,YAAYC,GASdM,CAAcN,EAAOd,gBACrBmB,EAAU,CAACL,OAAQ,MAErBO,iBAAkBxB,EARpB,SAUG,gBAAEyB,EAAF,EAAEA,OAAF,OACC,UAAC,KAAD,YACE,4BACE,SAAC,KAAD,CACE3B,KAAM,iBACN4B,GAAI,WACJC,YAAa,eAEdF,EAAOtB,iBAAkB,cAAGX,UAAWC,EAAAA,MAAd,SAA6BgC,EAAOtB,qBAEhE,mBAAQyB,KAAM,SAAd,iC,oBCjDV,GAAeC,E,QAAAA,KAAQC,EAAAA,EAAAA,KAdD,SAACC,GAAD,MAAY,CAChCxB,YAAawB,EAAMxB,YACnBO,OAAQiB,EAAMC,KAAKlB,WAGI,SAACmB,GACxB,MAAO,CACLf,mBAAoB,SAACgB,GACnBD,GAASE,EAAAA,EAAAA,GAAcD,SAMwCE,EAAAA,EAArE,CAAuFC","sources":["webpack://react-project/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__AcE4-\",\"list\":\"Dialogs_list__32+xj\",\"error\":\"Dialogs_error__bKokf\",\"list__item\":\"Dialogs_list__item__5HBul\",\"active\":\"Dialogs_active__RhoXj\"};","import React from 'react';\nimport styles from \"../Dialogs.module.css\";\nimport {NavLink} from 'react-router-dom';\n\nconst DialogItem = (props) => {\n  return (\n    <li className={styles.list__item} key={props.id}>\n      <NavLink className={navData => navData.isActive ? styles.active : ''} to={`/dialogs/${props.id}`}>{props.name}</NavLink>\n    </li>\n  );\n};\n\nexport default DialogItem;","import React from 'react';\nimport styles from \"../Dialogs.module.css\";\n\nconst Message = (props) => {\n  return (\n    <div className={styles.message}>{props.message}</div>\n  );\n};\n\nexport default Message;","import styles from './Dialogs.module.css'\nimport React from \"react\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport MessagesItem from './Message/Message';\nimport {Field, Form, Formik} from \"formik\";\nimport * as Yup from 'yup'\nimport {Navigate} from \"react-router\";\n\nconst messageSchema = Yup.object().shape({\n  newMessageBody: Yup.string()\n    .required('Введите текст')\n    .max(50, 'Max symbols is 50 or less')\n})\n\nconst Dialogs = (props) => {\n  let dialogsElements =\n    props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id}/>);\n\n  let messagesElements =\n    props.dialogsPage.messages.map(m => <MessagesItem id={m.id} message={m.message} key={m.id}/>);\n\n  const onSendMessageClick = (values) => {\n    props.onSendMessageClick(values);\n  };\n\n  if (!props.isAuth)  return <Navigate replace to={'/login'} />;\n\n  return (\n    <div className={styles.dialogs}>\n      <ul className={styles.list}>\n        {dialogsElements}\n      </ul>\n      <div>\n        <div>{messagesElements}</div>\n        <AddMassageForm sendMessage={onSendMessageClick} />\n      </div>\n    </div>\n  )\n}\n\nexport default Dialogs\n\nconst AddMassageForm = (props) => {\n\n  let addNewMessage = (values) => {\n    props.sendMessage(values);\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        newMessageBody: \"\"\n      }}\n      onSubmit={(values, {resetForm}) => {\n        addNewMessage(values.newMessageBody);\n        resetForm({values: ''});\n      }}\n      validationSchema={messageSchema}\n    >\n      {({errors}) => (\n        <Form>\n          <div>\n            <Field\n              name={'newMessageBody'}\n              as={'textarea'}\n              placeholder={'enter text'}\n            />\n            {errors.newMessageBody && <p className={styles.error}>{errors.newMessageBody}</p>}\n          </div>\n          <button type={'submit'}>Send Message</button>\n        </Form>\n      )}\n    </Formik>\n  )\n}","import {sendMessageAC} from \"../../redux/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) => ({\n  dialogsPage: state.dialogsPage,\n  isAuth: state.auth.isAuth,\n})\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    onSendMessageClick: (text) => {\n      dispatch(sendMessageAC(text))\n    },\n  }\n};\n\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs)"],"names":["props","className","styles","navData","isActive","to","id","name","message","messageSchema","Yup","shape","newMessageBody","required","max","dialogsElements","dialogsPage","dialogs","map","d","messagesElements","messages","m","isAuth","AddMassageForm","sendMessage","values","onSendMessageClick","replace","initialValues","onSubmit","resetForm","addNewMessage","validationSchema","errors","as","placeholder","type","compose","connect","state","auth","dispatch","text","sendMessageAC","withAuthRedirect","Dialogs"],"sourceRoot":""}